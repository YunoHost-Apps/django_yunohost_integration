[tool.poetry]
name = "django_yunohost_integration"
version = "0.2.4"
description = "Glue code to package django projects as yunohost apps."
authors = ["JensDiemer <git@jensdiemer.de>"]
license = "GPL"
readme = "README.md"
homepage = "https://github.com/jedie/django_yunohost_integration"
packages = [
    { include = "django_yunohost_integration" },
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/jedie/django_yunohost_integration/issues"

[tool.poetry.scripts]
devshell = 'django_yunohost_integration.dev_shell:devshell_cmdloop'

[tool.poetry.dependencies]
python = ">=3.7,<4.0.0"  # TODO: Update to >=3.8 after YunoHost updates to Bullseye
django = "*"
# The follogin extra packages are used for install "django_yunohost_integration" as YunoHost app:
gunicorn = { version = "*", optional = true }

# Don't use "psycopg2-binary": It's not available on ARM boards see: https://github.com/jedie/PyInventory/issues/56
psycopg2 = { version = "*", optional = true }  # https://www.psycopg.org/docs/install.html#build-prerequisites

django-redis = { version = "*", optional = true }
django-axes = { version = "*", optional = true }  # https://github.com/jazzband/django-axes

[tool.poetry.extras]
ynh = ["gunicorn", "psycopg2", "django-redis", "django-axes"]  # install as YunoHost app

[tool.poetry.dev-dependencies]
dev_shell = ">=0.2.2"  # https://github.com/jedie/dev-shell
django-axes = "*"  # https://github.com/jazzband/django-axes
poetry-publish = "*"  # https://github.com/jedie/poetry-publish
bx_py_utils = "*"  # https://github.com/boxine/bx_py_utils
bx_django_utils = "*"  # https://github.com/boxine/bx_django_utils
tox = "*"
pytest = "*"
pytest-cov = "*"
pytest-django = "*"
pytest-darker = "*"  # https://github.com/akaihola/pytest-darker
pytest-flake8 = "*"
pytest-isort = "*"
coveralls = "*"

darker = "*"  # https://github.com/akaihola/darker
black = "==21.12b0" # https://github.com/akaihola/darker/issues/264

# fix completion for Mac OS:
gnureadline = { version = "*", markers = "sys_platform == 'darwin'" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.darker]
src = ['.']
revision = "origin/main..."
line_length = 120
verbose = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
lint = [
    "flake8",
]
log_level = "INFO"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
profile='black'
line_length=120
skip_glob=[".*", "*/htmlcov/*","*/migrations/*"]
known_first_party=["django_yunohost_integration"]
lines_after_imports=2


[tool.pytest.ini_options]
# https://docs.pytest.org/en/latest/customize.html#pyproject-toml
minversion = "6.0"
norecursedirs = ".* .git __pycache__ conf coverage* dist htmlcov volumes"
# sometimes helpfull "addopts" arguments:
#    -vv
#    --verbose
#    --capture=no
#    --trace-config
#    --full-trace
#    -p no:warnings
addopts = """
    --import-mode=importlib
    --reuse-db
    --nomigrations
    --cov=.
    --cov-report term-missing
    --cov-report html
    --cov-report xml
    --no-cov-on-fail
    --showlocals
    --darker
    --flake8
    --isort
    --doctest-modules
    --failed-first
    --last-failed-no-failures all
    --new-first
"""


[tool.coverage.run]
omit = [".*"]


[tool.tox]
# https://tox.readthedocs.io/en/latest/example/basic.html#pyproject-toml-tox-legacy-ini
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py39,py38,py37
skip_missing_interpreters = True

[testenv]
passenv = *
whitelist_externals = pytest
commands =
    pytest --workers auto --tests-per-worker 1 --pyargs django_yunohost_integration django_yunohost_integration_project
"""
